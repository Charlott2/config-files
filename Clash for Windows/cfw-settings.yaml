showNewVersionIcon: true
hideAfterStartup: true
randomControllerPort: true
runTimeFormat: 'hh : mm : ss'
trayOrders:
  - - icon
  - - status
    - traffic
    - text
hideTrayIcon: false
connShowProcess: true
showTrayProxyDelayIndicator: true
connMode: true
connProfile: true
connProxy: 1
latencyTimeout: .nan
fontFamily: LXGW WenKai Screen
proxyOrder: 1
proxyDelayType: 1
latencyUrl: http://www.apple.com/library/test/success.html
theme: 0
mixinText: |
  # author: SeagullOddy
  # version: 2023.09.05
  mixin: # Mixin 配置
    dns: # DNS 配置
      enable: true
      ipv6: true

      enhanced-mode: fake-ip
      fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 CIDR
      fake-ip-filter: # fake-ip 排除列表
        # === Local ===
        - '*.lan'
        - '*.local'
        # === Microsoft Windows Serivice ===
        - '*.msftncsi.com'
        - '*.msftconnecttest.com'
        # === NTP Service ===
        - time.*.com
        - time.*.gov
        - time.*.edu.cn
        - '*.time.edu.cn'
        - time1.*.com
        - time2.*.com
        - time3.*.com
        - time4.*.com
        - time5.*.com
        - time6.*.com
        - time7.*.com
        - ntp.*.com
        - ntp1.*.com
        - ntp2.*.com
        - ntp3.*.com
        - ntp4.*.com
        - ntp5.*.com
        - ntp6.*.com
        - ntp7.*.com
        - ntp.*.*.cn
        - '*.ntp.org.cn'
        - '*.pool.ntp.org'
        # === Docker ===
        - '*.docker.internal'
        # === Music Service ===
        ## NetEase
        - '*.music.163.com'
        - '*.126.net'
        ## Baidu
        - musicapi.taihe.com
        - music.taihe.com
        ## Kugou
        - songsearch.kugou.com
        - trackercdn.kugou.com
        ## Kuwo
        - '*.kuwo.cn'
        ## JOOX
        - api-jooxtt.sanook.com
        - api.joox.com
        - joox.com
        ## QQ
        - '*.y.qq.com'
        - '*.music.tc.qq.com'
        - aqqmusic.tc.qq.com
        - '*.stream.qqmusic.qq.com'
        - localhost.ptlogin2.qq.com
        # === Game Service ===
        ## Nintendo Switch
        - '*.n.n.srv.nintendo.net'
        ## Sony PlayStation
        - '*.stun.playstation.net'
        ## Microsoft Xbox
        - xbox.*.*.microsoft.com
        - '*.*.xboxlive.com'
        # === Others ===
        - wlsy.cqut.edu.cn
        ## Golang
        - proxy.golang.org
        ## STUN Server
        - +.stun.*.*
        - +.stun.*.*.*
        - +.stun.*.*.*.*
        - +.stun.*.*.*.*.*
        ## WORKGROUP
        - WORKGROUP

      # 这些 名称服务器(nameservers) 用于解析下列 DNS 名称服务器主机名.
      # 仅指定 IP 地址
      default-nameserver:
        - '114.114.115.115' # 114DNS
        - '119.29.29.29' # DNSPod
        - '1.0.0.1' # Cloudflare
        - '8.8.8.8' # Google
      # 支持 UDP、TCP、DoT、DoH. 您可以指定要连接的端口.
      # 所有 DNS 查询都直接发送到名称服务器, 无需代理
      # Clash 使用第一个收到的响应作为 DNS 查询的结果.
      nameserver:
        # 上级网关DNS，请根据实际设置
        # - '192.168.3.1' # 家
        # 下面的DNS可以换成其他DNS，尽可能多设置几个，无需考虑污染
        - '114.114.115.115' # 114DNS
        - '119.29.29.29' # DNSPod
        - '1.0.0.1' # Cloudflare
        - '8.8.8.8' # Google
      # 当 `fallback` 存在时, DNS 服务器将向此部分中的服务器
      # 与 `nameservers` 中的服务器发送并发请求
      # 当 GEOIP 国家不是 `CN` 时, 将使用 fallback 服务器的响应
      fallback:
        - 'https://dns.alidns.com/dns-query' # AliDNS, ECS Support
        - 'https://dns.google/dns-query' # Google, ECS Support
        - 'https://cloudflare-dns.com/dns-query' # Cloudflare
        - 'tls://dns.alidns.com:853' # AliDNS, ECS Support
        - 'tls://dns.google:853' # Google, ECS Support
        - 'tls://one.one.one.one:853' # Cloudflare
      # 当 `fallback-filter.geoip` 为 true 且 IP 地址的 GEOIP 为 `CN` 时,
      # 将使用 `nameservers` 服务器解析的 IP 地址.
      # 如果 `fallback-filter.geoip` 为 false, 且不匹配 `fallback-filter.ipcidr`,
      # 则始终使用 `nameservers` 服务器的结果.
      # 这是对抗 DNS 污染攻击的一种措施.
      fallback-filter:
        geoip: true # 启用 GeoIP
        geoip-code: CN
        # ip-cidr:
        #   - 240.0.0.0/4
        # domain:
        #   - '+.google.com'
        #   - '+.facebook.com'
        #   - '+.twitter.com'
        #   - '+.youtube.com'
        #   - '+.xn--ngstr-lra8j.com'
        #   - '+.google.cn'
        #   - '+.googleapis.cn'
        #   - '+.googleapis.com'
        #   - '+.gvt1.com'
    tun: # Tun 配置
      enable: true
      stack: system # 使用 system stack 需要在防火墙放行程序
      dns-hijack:
        - 198.18.0.2:53 # 当 `fake-ip-range` 是 198.18.0.1/16, 应该劫持 198.18.0.2:53
      auto-route: true
      # 推荐使用 `interface-name`
      auto-detect-interface: true
profileParsersText: >
  # author: SeagullOddy

  # version: 2023.08.14

  parsers: # array
    # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
    - reg: ^.*$

      # 删除服务商提供的 DNS、策略组、规则提供者和规则
      code: |
        module.exports.parse = (raw, { yaml }) => {
          const rawObj = yaml.parse(raw)
          const dns = {}
          const proxyGroups = []
          const ruleProviders = []
          const rules = []
          return yaml.stringify({ ...rawObj, dns,'proxy-groups': proxyGroups, 'rule-providers': ruleProviders, rules })
        }

      # 建立自己的配置
      yaml:
        # 策略组示例
        # - name: 分组名
        #   type: select       # 手动选点
        #   url-test           # 自动选择延迟最低的节点
        #   fallback           # 节点故障时自动切换下一个
        #   laod-balance       # 均衡使用分组内的节点
        #   url: http://www.apple.com/library/test/success.html         # 测试地址 非select类型分组必要
        #   interval: 60       # 自动测试间隔时间，单位秒 非select类型分组 必要
        #   tolerance: 150     # 允许偏差的 ms，节点之间延迟差小于该值不切换 非必要
        #   proxies:
        #       - 节点名称或其他分组套娃
        prepend-proxy-groups: # 建立策略组
          - name: ✈️ 自动选择
            type: url-test
            url: http://www.apple.com/library/test/success.html
            interval: 60
            tolerance: 150

          - name: 🥰 节点选择
            type: select
            proxies:
              - DIRECT
              - ✈️ 自动选择

          - name: 🐟 漏网之鱼
            type: select
            proxies:
              - 🥰 节点选择
              - DIRECT
        # 命令
        commands:
          - proxy-groups.✈️ 自动选择.proxies.0+[]proxyNames
          - proxy-groups.🥰 节点选择.proxies.2+[]proxyNames # 向指定策略组添加订阅中的节点名，可使用正则过滤
          # 一些可能用到的正则过滤节点示例，使分组更细致
          # []proxyNames|a                         # 包含a
          # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
          # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
          # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
          # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c

        # 添加规则
        prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
          # 自定义规则，在这里添加自己的新规则
          - DOMAIN,www.msftconnecttest.com,🥰 节点选择
          - DOMAIN,api.segment.io,🥰 节点选择
          # provider 的匹配规则
          - RULE-SET,applications,DIRECT # 需要直连的进程/应用
          - RULE-SET,private,DIRECT # 需要直连的私有域名
          - RULE-SET,reject,REJECT # 广告域名
          - RULE-SET,icloud,DIRECT # iCloud 国内可访问
          - RULE-SET,apple,DIRECT # Apple 国内可访问
          - RULE-SET,google,DIRECT # Google 国内可访问
          - RULE-SET,proxy,🥰 节点选择 # 代理域名
          - RULE-SET,direct,DIRECT # 直连域名
          - RULE-SET,lancidr,DIRECT # 局域网 IP 及保留 IP
          - RULE-SET,cncidr,DIRECT # 中国大陆 IP
          - RULE-SET,telegramcidr,🥰 节点选择 # Telegram IP
          - GEOIP,LAN,DIRECT # GEOIP 判断为局域网 IP
          - GEOIP,CN,DIRECT # GEOIP 判断为国内 IP
          - MATCH,🐟 漏网之鱼 # 漏网之鱼

        # 混合规则集
        mix-rule-providers:
          reject:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt'
            path: ./ruleset/reject.yaml
            interval: 86400

          icloud:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt'
            path: ./ruleset/icloud.yaml
            interval: 86400

          apple:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt'
            path: ./ruleset/apple.yaml
            interval: 86400

          google:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt'
            path: ./ruleset/google.yaml
            interval: 86400

          proxy:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt'
            path: ./ruleset/proxy.yaml
            interval: 86400

          direct:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt'
            path: ./ruleset/direct.yaml
            interval: 86400

          private:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt'
            path: ./ruleset/private.yaml
            interval: 86400

          telegramcidr:
            type: http
            behavior: ipcidr
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt'
            path: ./ruleset/telegramcidr.yaml
            interval: 86400

          cncidr:
            type: http
            behavior: ipcidr
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt'
            path: ./ruleset/cncidr.yaml
            interval: 86400

          lancidr:
            type: http
            behavior: ipcidr
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt'
            path: ./ruleset/lancidr.yaml
            interval: 86400

          applications:
            type: http
            behavior: classical
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt'
            path: ./ruleset/applications.yaml
            interval: 86400
editor: 1
editorFontSize: 14
showNotifications: false
titleBarText: 'Current Mode: %mode%, Mixin Status: %mixin%. (,,´•ω•)ノ"(´っω•｀。)'
trayProxiesStyle: 1
hideUnselectableGroup: true
showProxyFilter: true
connChainType: 2
checkForUpdates: false
