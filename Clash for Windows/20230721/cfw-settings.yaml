showNewVersionIcon: true
hideAfterStartup: true
randomControllerPort: true
runTimeFormat: 'hh : mm : ss'
trayOrders:
  - - icon
  - - status
    - traffic
    - text
hideTrayIcon: false
connShowProcess: true
showTrayProxyDelayIndicator: true
connMode: false
connProfile: true
connProxy: 0
latencyTimeout: .nan
fontFamily: LXGW WenKai Screen
proxyOrder: 1
proxyDelayType: 1
latencyUrl: http://www.apple.com/library/test/success.html
theme: 0
mixinText: |
  # author: Waoap
  # version: 2023.05.03
  mixin: # Mixin 配置
    dns: # DNS 配置
      enable: true
      ipv6: true
      enhanced-mode: fake-ip # redir-host / fake-ip（推荐）
      fake-ip-filter: # 不使用 fake-ip 的列表
        # === Local ===
        - '*.lan'
        - '*.local'
        # === Microsoft Windows Serivice ===
        - '*.msftncsi.com'
        - '*.msftconnecttest.com'
        # === NTP Service ===
        - time.*.com
        - time.*.gov
        - time.*.edu.cn
        - '*.time.edu.cn'
        - time1.*.com
        - time2.*.com
        - time3.*.com
        - time4.*.com
        - time5.*.com
        - time6.*.com
        - time7.*.com
        - ntp.*.com
        - ntp1.*.com
        - ntp2.*.com
        - ntp3.*.com
        - ntp4.*.com
        - ntp5.*.com
        - ntp6.*.com
        - ntp7.*.com
        - ntp.*.*.cn
        - '*.ntp.org.cn'
        - '*.pool.ntp.org'
        # === Music Service ===
        ## NetEase
        - '*.music.163.com'
        - '*.126.net'
        ## Baidu
        - musicapi.taihe.com
        - music.taihe.com
        ## Kugou
        - songsearch.kugou.com
        - trackercdn.kugou.com
        ## Kuwo
        - '*.kuwo.cn'
        ## JOOX
        - api-jooxtt.sanook.com
        - api.joox.com
        - joox.com
        ## QQ
        - '*.y.qq.com'
        - '*.music.tc.qq.com'
        - aqqmusic.tc.qq.com
        - '*.stream.qqmusic.qq.com'
        # === Game Service ===
        ## Nintendo Switch
        - '*.n.n.srv.nintendo.net'
        ## Sony PlayStation
        - '*.stun.playstation.net'
        ## Microsoft Xbox
        - xbox.*.*.microsoft.com
        - '*.*.xboxlive.com'
        # === Others ===
        - wlsy.cqut.edu.cn
        ## QQ Quick Login
        - localhost.ptlogin2.qq.com
        ## Golang
        - proxy.golang.org
        ## STUN Server
        - +.stun.*.*
        - +.stun.*.*.*
        - +.stun.*.*.*.*
        - +.stun.*.*.*.*.*
        ## WORKGROUP
        - WORKGROUP
      default-nameserver: # 用于查询下面的 DoH/DoT
        - '114.114.115.115'
        - '223.5.5.5'
        - '1.0.0.1'
      nameserver: # GeoIP 为 CN 时使用的 DNS NameServer
        # 上级网关DNS，请根据实际设置（宿舍宽带）
        # - '202.202.145.6'
        - '192.168.3.1'
        - '114.114.115.115' # 这里开始的DNS可以换成其他DNS，尽可能多设置几个，无需考虑污染
        - '223.5.5.5'
      fallback: # GeoIP 不是 CN 时使用的 DNS NameServer
        - 'https://1.0.0.1/dns-query'
        - 'https://doh.opendns.com/dns-query'
        - 'https://dns.google/dns-query'
      # fallback-filter: #好像不是很需要
      #   geoip: true # 启用 GeoIP
      #   geoip-code: CN
      #   ip-cidr:
      #     - 240.0.0.0/4
      #   domain:
      #     - '+.google.com'
      #     - '+.facebook.com'
      #     - '+.twitter.com'
      #     - '+.youtube.com'
      #     - '+.xn--ngstr-lra8j.com'
      #     - '+.google.cn'
      #     - '+.googleapis.cn'
      #     - '+.googleapis.com'
      #     - '+.gvt1.com'
    tun: # Tun 配置
      enable: true
      stack: system # 使用 system stack 需要在防火墙放行程序
      dns-hijack:
        - any:53
      auto-route: true
      auto-detect-interface: true
profileParsersText: >
  # author: Waoap

  # version: 2023.04.24

  parsers: # array
    # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
    - reg: ^.*$

      # 删除服务商提供的 DNS、策略组、规则提供者和规则
      code: |
        module.exports.parse = (raw, { yaml }) => {
          const rawObj = yaml.parse(raw)
          const dns = {}
          const proxyGroups = []
          const ruleProviders = []
          const rules = []
          return yaml.stringify({ ...rawObj, dns,'proxy-groups': proxyGroups, 'rule-providers': ruleProviders, rules })
        }

      # 建立自己的配置
      yaml:
        # 策略组示例
        # - name: 分组名
        #   type: select       # 手动选点
        #   url-test           # 自动选择延迟最低的节点
        #   fallback           # 节点故障时自动切换下一个
        #   laod-balance       # 均衡使用分组内的节点
        #   url: http://www.apple.com/library/test/success.html         # 测试地址 非select类型分组必要
        #   interval: 60       # 自动测试间隔时间，单位秒 非select类型分组 必要
        #   tolerance: 150     # 允许偏差的 ms，节点之间延迟差小于该值不切换 非必要
        #   proxies:
        #       - 节点名称或其他分组套娃
        prepend-proxy-groups: # 建立策略组
          - name: ✈️ 自动选择
            type: url-test
            url: http://www.apple.com/library/test/success.html
            interval: 60
            tolerance: 150

          - name: 🥰 节点选择
            type: select
            proxies:
              - DIRECT
              - ✈️ 自动选择

          - name: 🐟 漏网之鱼
            type: select
            proxies:
              - 🥰 节点选择
              - DIRECT
        # 命令
        commands:
          - proxy-groups.✈️ 自动选择.proxies.0+[]proxyNames
          - proxy-groups.🥰 节点选择.proxies.2+[]proxyNames # 向指定策略组添加订阅中的节点名，可使用正则过滤
          # 一些可能用到的正则过滤节点示例，使分组更细致
          # []proxyNames|a                         # 包含a
          # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
          # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
          # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
          # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c

        # 添加规则
        prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
          # 自定义规则，在这里添加自己的新规则
          - DOMAIN,www.msftconnecttest.com,🥰 节点选择
          # provider 的匹配规则
          - RULE-SET,applications,DIRECT # 需要直连的进程/应用
          - RULE-SET,private,DIRECT # 需要直连的私有域名
          - RULE-SET,reject,REJECT # 广告域名
          - RULE-SET,icloud,DIRECT # iCloud 国内可访问
          - RULE-SET,apple,DIRECT # Apple 国内可访问
          #- RULE-SET,google,DIRECT # Google 国内可访问，慎用
          - RULE-SET,proxy,🥰 节点选择 # 代理域名
          - RULE-SET,direct,DIRECT # 直连域名
          - RULE-SET,lancidr,DIRECT # 局域网 IP 及保留 IP
          - RULE-SET,cncidr,DIRECT # 中国大陆 IP
          - RULE-SET,telegramcidr,🥰 节点选择 # Telegram IP
          - GEOIP,LAN,DIRECT # GEOIP 判断为局域网 IP
          - GEOIP,CN,DIRECT # GEOIP 判断为国内 IP
          - MATCH,🐟 漏网之鱼 # 漏网之鱼

        # 混合规则集
        mix-rule-providers:
          reject:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt'
            path: ./ruleset/reject.yaml
            interval: 86400

          icloud:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt'
            path: ./ruleset/icloud.yaml
            interval: 86400

          apple:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt'
            path: ./ruleset/apple.yaml
            interval: 86400

          google:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt'
            path: ./ruleset/google.yaml
            interval: 86400

          proxy:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt'
            path: ./ruleset/proxy.yaml
            interval: 86400

          direct:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt'
            path: ./ruleset/direct.yaml
            interval: 86400

          private:
            type: http
            behavior: domain
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt'
            path: ./ruleset/private.yaml
            interval: 86400

          telegramcidr:
            type: http
            behavior: ipcidr
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt'
            path: ./ruleset/telegramcidr.yaml
            interval: 86400

          cncidr:
            type: http
            behavior: ipcidr
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt'
            path: ./ruleset/cncidr.yaml
            interval: 86400

          lancidr:
            type: http
            behavior: ipcidr
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt'
            path: ./ruleset/lancidr.yaml
            interval: 86400

          applications:
            type: http
            behavior: classical
            url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt'
            path: ./ruleset/applications.yaml
            interval: 86400
