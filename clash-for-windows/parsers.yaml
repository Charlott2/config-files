# author: Waoap
# version: 22.12.9
# update: 2022/12/9
parsers: # array
  # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
  - reg: ^.*$
    # 删除服务商提供的策略组、规则提供者和规则
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const dns = {}
        const proxyGroups = []
        const ruleProviders = []
        const rules = []
        return yaml.stringify({ ...rawObj, dns,'proxy-groups': proxyGroups, 'rule-providers': ruleProviders, rules })
      }
    # 建立自己的配置
    yaml:
      # 策略组示例
      # - name: 分组名
      #   type: select       # 手动选点
      #   url-test           # 自动选择延迟最低的节点
      #   fallback           # 节点故障时自动切换下一个
      #   laod-balance       # 均衡使用分组内的节点
      #   url: http://www.gstatic.com/generate_204       # 测试地址 非select类型分组必要
      #   interval: 300      # 自动测试间隔时间，单位秒 非select类型分组必要
      #   tolerance: 50      # 允许的偏差，节点之间延迟差小于该值不切换 非必要
      #   proxies:
      #       - 节点名称或其他分组套娃
      prepend-proxy-groups: # 建立策略组
        - name: 🔯 MAGIC
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 86400
          proxies:
            - DIRECT

        - name: 🔰 选择节点
          type: select

        - name: ✈️ 自动选择
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300
          tolerance: 50

        - name: PROXY
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 86400
          proxies:
            - 🔰 选择节点

      commands:
        - proxy-groups.🔰 选择节点.proxies+[]proxyNames # 向指定策略组添加订阅中的节点名，可使用正则过滤
        - proxy-groups.🔰 选择节点.proxies.0+DIRECT # 向指定分组第一个位置添加一个 DIRECT 节点名
        - proxy-groups.🔰 选择节点.proxies.1+✈️ 自动选择 # 向指定分组第二个位置添加一个 自动选择 节点名
        - proxy-groups.✈️ 自动选择.proxies+[]proxyNames
        # 一些可能用到的正则过滤节点示例，使分组更细致
        # []proxyNames|a                         # 包含a
        # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
        # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
        # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
        # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c
      # 添加规则
      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
        # 自定义规则，在这里添加自己的新规则
        - DOMAIN,www.msftconnecttest.com,PROXY

        # provider 的匹配规则
        - RULE-SET,lancidr,DIRECT,no-resolve
        - RULE-SET,cncidr,DIRECT,no-resolve

        - RULE-SET,reject,REJECT

        - RULE-SET,icloud,DIRECT
        - RULE-SET,apple,DIRECT
        - RULE-SET,google,PROXY

        - RULE-SET,gfw,PROXY
        - RULE-SET,greatfire,PROXY
        - RULE-SET,tld-not-cn,PROXY

        - RULE-SET,telegramcidr,PROXY,no-resolve

        - RULE-SET,proxy,PROXY
        - RULE-SET,direct,DIRECT
        - GEOIP,CN,DIRECT
        - MATCH,🔯 MAGIC
      # 混合规则集
      mix-rule-providers:
        reject:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt'
          path: ./ruleset/reject.yaml
          interval: 86400

        icloud:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt'
          path: ./ruleset/icloud.yaml
          interval: 86400

        apple:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt'
          path: ./ruleset/apple.yaml
          interval: 86400

        google:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt'
          path: ./ruleset/google.yaml
          interval: 86400

        proxy:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt'
          path: ./ruleset/proxy.yaml
          interval: 86400

        direct:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt'
          path: ./ruleset/direct.yaml
          interval: 86400

        gfw:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt'
          path: ./ruleset/gfw.yaml
          interval: 86400

        greatfire:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt'
          path: ./ruleset/greatfire.yaml
          interval: 86400

        tld-not-cn:
          type: http
          behavior: domain
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt'
          path: ./ruleset/tld-not-cn.yaml
          interval: 86400

        telegramcidr:
          type: http
          behavior: ipcidr
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt'
          path: ./ruleset/telegramcidr.yaml
          interval: 86400

        cncidr:
          type: http
          behavior: ipcidr
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt'
          path: ./ruleset/cncidr.yaml
          interval: 86400

        lancidr:
          type: http
          behavior: ipcidr
          url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt'
          path: ./ruleset/lancidr.yaml
          interval: 86400
