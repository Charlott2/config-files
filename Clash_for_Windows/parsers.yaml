# author: Waoap
# version: 1.0.0
# update: 2022/11/19 17:36
parsers: # array
    # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
    - reg: ^.*$
      # 删除服务商提供的策略组、规则提供者和规则
      code: |
          module.exports.parse = (raw, { yaml }) => {
            const rawObj = yaml.parse(raw)
            const proxyGroups = []
            const ruleProviders = []
            const rules = []
            return yaml.stringify({ ...rawObj, 'proxy-groups': proxyGroups, 'rule-providers': ruleProviders, rules })
          }
      # 建立自己的配置
      yaml:
          prepend-proxy-groups: # 建立策略组
              - name: 🔯 代理模式丨黑名单
                type: url-test
                url: http://www.gstatic.com/generate_204
                interval: 86400
                proxies:
                    - DIRECT

              - name: 🔰 选择节点
                type: select

              - name: ✈️ 自动选择
                type: url-test
                url: http://www.gstatic.com/generate_204
                interval: 300
                tolerance: 50

              - name: PROXY
                type: url-test
                url: http://www.gstatic.com/generate_204
                interval: 86400
                proxies:
                    - 🔰 选择节点

          # 策略组示例
          # - name: 分组名
          # type: select       # 手动选点
          # url-test     # 自动选择延迟最低的节点
          # fallback     # 节点故障时自动切换下一个
          # laod-balance # 均衡使用分组内的节点
          # url: http://www.gstatic.com/generate_204 # 测试地址 非select类型分组必要
          # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
          # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
          # proxies:
          # - 节点名称或其他分组套娃

          commands:
              - proxy-groups.🔰 选择节点.proxies+[]proxyNames # 向指定策略组添加订阅中的节点名，可使用正则过滤
              - proxy-groups.🔰 选择节点.proxies.0+DIRECT # 向指定分组第一个位置添加一个 DIRECT 节点名
              - proxy-groups.🔰 选择节点.proxies.1+✈️ 自动选择 # 向指定分组第二个位置添加一个 自动选择 节点名
              - proxy-groups.✈️ 自动选择.proxies+[]proxyNames
              # 一些可能用到的正则过滤节点示例，使分组更细致
              # []proxyNames|a                         # 包含a
              # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
              # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
              # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
              # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c
          # 添加规则
          prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
              # 自定义规则，在这里添加自己的新规则
              - DOMAIN,www.msftconnecttest.com,PROXY

              # provider 的匹配规则
              - RULE-SET,applications,DIRECT
              - RULE-SET,private,DIRECT
              - RULE-SET,reject,REJECT
              - RULE-SET,tld-not-cn,PROXY
              - RULE-SET,gfw,PROXY
              - RULE-SET,greatfire,PROXY
              - RULE-SET,telegramcidr,PROXY
              - MATCH,🔯 代理模式丨黑名单
          # 混合规则集
          mix-rule-providers:
              applications: # 需要直连的常见软件列表
                  type: http
                  behavior: classical
                  url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt'
                  path: ./ruleset/applications.yaml
                  interval: 86400

              reject: # 广告域名列表
                  type: http
                  behavior: domain
                  url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt'
                  path: ./ruleset/reject.yaml
                  interval: 86400

              private: # 私有网络专用域名列表
                  type: http
                  behavior: domain
                  url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt'
                  path: ./ruleset/private.yaml
                  interval: 86400

              gfw: # GFWList 域名列表
                  type: http
                  behavior: domain
                  url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt'
                  path: ./ruleset/gfw.yaml
                  interval: 86400

              greatfire: # GreatFire 域名列表
                  type: http
                  behavior: domain
                  url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt'
                  path: ./ruleset/greatfire.yaml
                  interval: 86400

              tld-not-cn: # 非中国大陆使用的顶级域名列表
                  type: http
                  behavior: domain
                  url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt'
                  path: ./ruleset/tld-not-cn.yaml
                  interval: 86400

              telegramcidr: # Telegram 使用的 IP 地址列表
                  type: http
                  behavior: ipcidr
                  url: 'https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt'
                  path: ./ruleset/telegramcidr.yaml
                  interval: 86400
